/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { OwnableContract } from "./Ownable";
import { ERC165Contract } from "./ERC165";
import { IERC165Contract } from "./IERC165";
import { ERC1155Contract } from "./ERC1155";
import { IERC1155Contract } from "./IERC1155";
import { IERC1155MetadataURIContract } from "./IERC1155MetadataURI";
import { IERC1155ReceiverContract } from "./IERC1155Receiver";
import { IERC20Contract } from "./IERC20";
import { IFundManagerContract } from "./IFundManager";
import { IL2WithdrawableERC20Contract } from "./IL2WithdrawableERC20";
import { L1BrokerContract } from "./L1Broker";
import { L1InstantCrossDomainMessengerContract } from "./L1InstantCrossDomainMessenger";
import { L1OptimismWithdrawContract } from "./L1OptimismWithdraw";
import { L2CheckpointContract } from "./L2Checkpoint";
import { MockFundControllerContract } from "./MockFundController";
import { MockFundManagerContract } from "./MockFundManager";
import { SemicenContract } from "./Semicen";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "Ownable"): OwnableContract;
      require(name: "ERC165"): ERC165Contract;
      require(name: "IERC165"): IERC165Contract;
      require(name: "ERC1155"): ERC1155Contract;
      require(name: "IERC1155"): IERC1155Contract;
      require(name: "IERC1155MetadataURI"): IERC1155MetadataURIContract;
      require(name: "IERC1155Receiver"): IERC1155ReceiverContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "IFundManager"): IFundManagerContract;
      require(name: "IL2WithdrawableERC20"): IL2WithdrawableERC20Contract;
      require(name: "L1Broker"): L1BrokerContract;
      require(
        name: "L1InstantCrossDomainMessenger"
      ): L1InstantCrossDomainMessengerContract;
      require(name: "L1OptimismWithdraw"): L1OptimismWithdrawContract;
      require(name: "L2Checkpoint"): L2CheckpointContract;
      require(name: "MockFundController"): MockFundControllerContract;
      require(name: "MockFundManager"): MockFundManagerContract;
      require(name: "Semicen"): SemicenContract;
    }
  }
}

export { OwnableContract, OwnableInstance } from "./Ownable";
export { ERC165Contract, ERC165Instance } from "./ERC165";
export { IERC165Contract, IERC165Instance } from "./IERC165";
export { ERC1155Contract, ERC1155Instance } from "./ERC1155";
export { IERC1155Contract, IERC1155Instance } from "./IERC1155";
export {
  IERC1155MetadataURIContract,
  IERC1155MetadataURIInstance,
} from "./IERC1155MetadataURI";
export {
  IERC1155ReceiverContract,
  IERC1155ReceiverInstance,
} from "./IERC1155Receiver";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export { IFundManagerContract, IFundManagerInstance } from "./IFundManager";
export {
  IL2WithdrawableERC20Contract,
  IL2WithdrawableERC20Instance,
} from "./IL2WithdrawableERC20";
export { L1BrokerContract, L1BrokerInstance } from "./L1Broker";
export {
  L1InstantCrossDomainMessengerContract,
  L1InstantCrossDomainMessengerInstance,
} from "./L1InstantCrossDomainMessenger";
export {
  L1OptimismWithdrawContract,
  L1OptimismWithdrawInstance,
} from "./L1OptimismWithdraw";
export { L2CheckpointContract, L2CheckpointInstance } from "./L2Checkpoint";
export {
  MockFundControllerContract,
  MockFundControllerInstance,
} from "./MockFundController";
export {
  MockFundManagerContract,
  MockFundManagerInstance,
} from "./MockFundManager";
export { SemicenContract, SemicenInstance } from "./Semicen";
