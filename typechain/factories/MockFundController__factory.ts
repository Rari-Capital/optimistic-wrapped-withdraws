/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockFundController } from "../MockFundController";

export class MockFundController__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockFundController> {
    return super.deploy(overrides || {}) as Promise<MockFundController>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockFundController {
    return super.attach(address) as MockFundController;
  }
  connect(signer: Signer): MockFundController__factory {
    return super.connect(signer) as MockFundController__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFundController {
    return new Contract(address, _abi, signerOrProvider) as MockFundController;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "currencyCode",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveToMUsd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pool",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "currencyCode",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveToPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x945749f6",
        type: "bytes32",
      },
    ],
    name: "c_0x945749f6",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pool",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "currencyCode",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "inputCurrencyCode",
        type: "string",
      },
      {
        internalType: "string",
        name: "outputCurrencyCode",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
    ],
    name: "swapMStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pool",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "currencyCode",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFromPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e84806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806375a3c9251161005057806375a3c9251461020a5780637e77468914610297578063f72adacf1461031a57610072565b80634ac3550c1461007757806355e911461461014f5780635d6aa531146101dc575b600080fd5b61014d6004803603606081101561008d57600080fd5b81019080803590602001906401000000008111156100aa57600080fd5b8201836020820111156100bc57600080fd5b803590602001918460018302840111640100000000831117156100de57600080fd5b9091929391929390803590602001906401000000008111156100ff57600080fd5b82018360208201111561011157600080fd5b8035906020019184600183028401116401000000008311171561013357600080fd5b9091929391929390803590602001909291905050506103a7565b005b6101da6004803603606081101561016557600080fd5b81019080803590602001909291908035906020019064010000000081111561018c57600080fd5b82018360208201111561019e57600080fd5b803590602001918460018302840111640100000000831117156101c057600080fd5b9091929391929390803590602001909291905050506104de565b005b610208600480360360208110156101f257600080fd5b81019080803590602001909291905050506105ed565b005b6102956004803603606081101561022057600080fd5b81019080803590602001909291908035906020019064010000000081111561024757600080fd5b82018360208201111561025957600080fd5b8035906020019184600183028401116401000000008311171561027b57600080fd5b9091929391929390803590602001909291905050506105f0565b005b610318600480360360408110156102ad57600080fd5b81019080803590602001906401000000008111156102ca57600080fd5b8201836020820111156102dc57600080fd5b803590602001918460018302840111640100000000831117156102fe57600080fd5b9091929391929390803590602001909291905050506106ff565b005b6103a56004803603606081101561033057600080fd5b81019080803590602001909291908035906020019064010000000081111561035757600080fd5b82018360208201111561036957600080fd5b8035906020019184600183028401116401000000008311171561038b57600080fd5b9091929391929390803590602001909291905050506107ef565b005b6103d37fd3e64f883d1449385881ddb5973846438a3553aa56d4e4b7efee503596595ba660001b6105ed565b6103ff7fedff5990caa4a47cc0ace07dd0c378dd583d470b13dd613e23ee8ca455d56bb160001b6105ed565b61042b7f2758f8312b87b585b85534fdbeaa6212f5b769b51dfdaa744732923c82e39d8a60001b6105ed565b6104d7604051806060016040528060308152602001610e1f6030913986868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050846108fe565b5050505050565b61050a7fd90c9691403d583ec74e66b11cca307513cdda80cdb402979abe93fe62b23ab760001b6105ed565b6105367f3d8fdf1265386fffac714b84eb7279c46076d0d09f3bac90dceff7feae5e9a8a60001b6105ed565b6105627f389eeb6128639a0c66a47c67671381ae1aecf263b48dcfd4d955705297bbbcb560001b6105ed565b6105e76040518060400160405280601b81526020017f417070726f76653a20616d6f756e742d73796d626f6c2d706f6f6c00000000008152508285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087610ae1565b50505050565b50565b61061c7f9a201dffaef6809d608ce22d8d7ba12acfb0ae16d1ff57dd4b7e54a9dac668c660001b6105ed565b6106487fc44aa43f215505e7f080b1f5765a4b6a1e45a45ef6b9947df0ac19eeaa198a5460001b6105ed565b6106747fdba6d677ad73c5c063c146c6236c1cbcb96b71c262e2ee93639602a72536501d60001b6105ed565b6106f96040518060400160405280601b81526020017f4465706f7369743a20616d6f756e742d73796d626f6c2d706f6f6c00000000008152508285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087610ae1565b50505050565b61072b7fdfacde6e79bca71b312e31fda54038af936f0930ae5381139811508082877ffb60001b6105ed565b6107577f9d6b6bd24ccb4e2978a2726981c74cc5fc27fb25c4ed006b07576eeba34f055960001b6105ed565b6107837f77203c824a879ef45e4f4737d98d9e95ba03c7fdede5fe389e66305805cc4d8d60001b6105ed565b6107ea604051806060016040528060218152602001610dfe6021913984848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505083610c5f565b505050565b61081b7f4c9813f79d88b34717b68bcb453750f4aa14e12717b31bd171663fbf3316faf660001b6105ed565b6108477f49e0bf27d6c1680c32e95eb8c1487b6a7c33c4d819e96af901cae49fc94cd88560001b6105ed565b6108737fd9fc44fdbfac23aa440e166bf95dca94aaeb1302f4915e83fa1077055c92a86e60001b6105ed565b6108f86040518060400160405280601c81526020017f57697468647261773a20616d6f756e742d73796d626f6c2d706f6f6c000000008152508285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087610ae1565b50505050565b610adb8484848460405160240180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b8381101561095657808201518184015260208101905061093b565b50505050905090810190601f1680156109835780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156109bc5780820151818401526020810190506109a1565b50505050905090810190601f1680156109e95780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015610a22578082015181840152602081019050610a07565b50505050905090810190601f168015610a4f5780820380516001836020036101000a031916815260200191505b509750505050505050506040516020818303038152906040527f9fd009f5000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610dd4565b50505050565b610c5984848484604051602401808060200185815260200180602001848152602001838103835287818151815260200191508051906020019080838360005b83811015610b3b578082015181840152602081019050610b20565b50505050905090810190601f168015610b685780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610ba1578082015181840152602081019050610b86565b50505050905090810190601f168015610bce5780820380516001836020036101000a031916815260200191505b5096505050505050506040516020818303038152906040527fa0c4b225000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610dd4565b50505050565b610dcf838383604051602401808060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610cb2578082015181840152602081019050610c97565b50505050905090810190601f168015610cdf5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610d18578082015181840152602081019050610cfd565b50505050905090810190601f168015610d455780820380516001836020036101000a031916815260200191505b50955050505050506040516020818303038152906040527ff362ca59000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610dd4565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa505050505056fe417070726f766520746f206d537461626c653a2073796d626f6c2d616d6f756e7453776170206f6e206d537461626c653a20696e70757453796d626f6c2d6f757470757453796d626f6c2d616d6f756e74a2646970667358221220fd27448c9a238302e0395919d36ae80c8bb9b3157b03ea4b684e92f89242efb464736f6c63430007030033";
